security:
    # encoders : type de hachage
    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    # providers : fournisseur de comptes utilisateurs
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\AppAuthenticator
            logout:
                path: security.logout 
                target: security.login 

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # access_control : routes accessibles à un rôle spécifique
    # rôle donne accès à des privilèges : obligatoire de préfixer par ROLE_
    # path: début d'url ciblé 
    # roles: le rôle qui posséde les privilèges d'accès
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        
    # role_hierarchy : hiérarchie des rôles - système d'héritage sur les privilèges
    # le rôle défini  en clé est supérieur au rôle défini en valeur 
    # ROLE_SUPER_ADMIN > ROLE_ADMIN > ROLE_USER
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        #ROLE_SUPER_ADMIN: ROLE_ADMIN